---
import Layout from '../layouts/Layout.astro';
const posts = await Astro.glob('./projects/*.md');

function getFirstImage(content: string) {
    const imageMatch = content.match(/!\[.*?\]\((.*?)\)/);
    if (imageMatch) {
        return imageMatch[1];
    }
    return null;
}
---

<Layout title="Projects">
	<div class="projects">
		<h1>Projects</h1>
		<div class="projects-grid">
			{posts.map(post => {
				const firstImage = getFirstImage(post.rawContent());
				return (
					<a href={post.url} class="project-card">
						<article>
							<div class="card-content">
								<div class="content-text">
									<h2>{post.frontmatter.title}</h2>
									<p class="date">{post.frontmatter.date}</p>
									<p>{post.frontmatter.description}</p>
									<div class="tags">
										{post.frontmatter.tags?.map((tag: string) => (
											<span class="tag">{tag}</span>
										))}
									</div>
								</div>
								{firstImage && (
									<div class="card-image">
										<img src={firstImage} alt={post.frontmatter.title} />
									</div>
								)}
							</div>
						</article>
					</a>
				);
			})}
		</div>
	</div>
</Layout>

<style>
	.projects {
		max-width: 800px;
		margin: 0 auto;
	}

	.projects-grid {
		display: grid;
		gap: 2rem;
	}

	.project-card {
		border: 1px solid var(--border-color);
		border-radius: 0.5rem;
		background-color: var(--bg-secondary);
		transition: all 0.3s ease;
		text-decoration: none;
		color: inherit;
		display: block;
		position: relative;
		overflow: hidden;
	}

	.project-card::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: var(--accent-color);
		opacity: 0;
		transition: opacity 0.3s ease;
		z-index: 1;
		pointer-events: none;
	}

	.project-card:hover {
		transform: translateY(-3px);
		box-shadow: 0 4px 20px -1px rgba(139, 92, 246, 0.25);
	}

	.project-card:hover::before {
		opacity: 0.05;
	}

	.card-content {
		padding: 1.5rem;
		position: relative;
		z-index: 2;
		display: flex;
		gap: 1.5rem;
		align-items: flex-start;
	}

	.content-text {
		flex: 1;
		min-width: 0;
	}

	.card-image {
		width: 150px;
		height: 150px;
		flex-shrink: 0;
		overflow: hidden;
		border-radius: 0.5rem;
	}

	.card-image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform 0.3s ease;
	}

	.project-card:hover .card-image img {
		transform: scale(1.05);
	}

	.project-card h2 {
		margin: 0;
		font-size: 1.5rem;
		color: var(--accent-color);
	}

	.date {
		color: var(--accent-color);
		font-size: 0.9rem;
		margin: 0.5rem 0;
	}

	.tags {
		display: flex;
		gap: 0.5rem;
		margin-top: 1rem;
		flex-wrap: wrap;
	}

	.tag {
		background-color: var(--bg-color);
		color: var(--text-secondary);
		padding: 0.25rem 0.75rem;
		border-radius: 9999px;
		font-size: 0.875rem;
		border: 1px solid var(--border-color);
	}

	@media (max-width: 600px) {
		.card-content {
			flex-direction: column;
		}

		.card-image {
			width: 100%;
			height: 200px;
			order: -1;
		}
	}
</style>